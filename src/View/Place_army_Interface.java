/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.Icon;
import riskgamemodel.Continent;
import riskgamemodel.Player;
import riskgamemodel.Session;
import riskgamemodel.Territory;

/**
 *
 * @author andre
 */
public class Place_army_Interface extends javax.swing.JFrame {

    Session sessionstart;
    ArrayList<Territory> territoryplayer;
    /**
     * Creates new form Interfaz
     */

    public Place_army_Interface(Session session) {
        sessionstart = session;
        initComponents();
        this.setLocationRelativeTo(null);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Button_finish = new javax.swing.JButton();
        Territory = new javax.swing.JComboBox();
        Map = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Button_finish.setText("Finish");
        Button_finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_finishActionPerformed(evt);
            }
        });
        getContentPane().add(Button_finish, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 550, 110, -1));

        Territory.setModel((new javax.swing.DefaultComboBoxModel(Territories())));
        Territory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TerritoryActionPerformed(evt);
            }
        });
        getContentPane().add(Territory, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 550, 220, -1));

        Map.setIcon(Map());
        getContentPane().add(Map, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 85, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/RISK-LOGO_EMEA.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 210, 70));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue-hd-wallpapers-20.jpg"))); // NOI18N
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 590));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TerritoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TerritoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TerritoryActionPerformed

    private void Button_finishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_finishActionPerformed
        String name_territory = (String)Territory.getSelectedItem();
        Territory territory = new Territory();
        for (int i = 0; i < territoryplayer.size(); i++) {
            if(name_territory.equals(territoryplayer.get(i).getString())){
                territory = territoryplayer.get(i);
            }
        }
        Player[] players = sessionstart.getPlayers();
        Player playerstart = new Player();
        for (Player player : players) {
            if (player.getTurn()) {
                playerstart = player;
            }
        }
        this.setVisible(false);
        if(playerstart.getArmy() > 0 && sessionstart.getState().equals("RUN")){
            new Place_army_Interface(sessionstart).setVisible(true);
        }else{
            new Main_Interface(sessionstart).setVisible(true);
        }
        
    }//GEN-LAST:event_Button_finishActionPerformed
    
    private String[] Territories(){
        Player[] players = sessionstart.getPlayers();
        Player playerstart = new Player();
        for (Player player : players) {
            if (player.getTurn()) {
                playerstart = player;
            }
        }
        territoryplayer = new ArrayList();
        Continent[] continents = sessionstart.getMap().getContinents();
        for (Continent continent : continents) {
            Territory[] territories = continent.getTerritory();
            for (Territory territorie : territories) {
                if (territorie.getOwner().equals(playerstart.getColor()) || territorie.getArmy() == 0) {
                    territoryplayer.add(territorie);
                }
            }
        }
        String[] territoriesplayer = new String[territoryplayer.size()];
        for (int i = 0; i < territoryplayer.size(); i++) {
            territoriesplayer[i] = territoryplayer.toString();
        }
        return territoriesplayer;
    }
    private Icon Map(){
        return (new javax.swing.ImageIcon(getClass().getResource("/images/" + Session.getSession().getMap().getName() + ".png")));
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton Button_finish;
    private javax.swing.JLabel Map;
    private javax.swing.JComboBox Territory;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
